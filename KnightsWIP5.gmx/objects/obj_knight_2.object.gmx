<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_knight_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
//starting sprite
spawn = true;
sprite_index = spr_knight_draw_sword;
//actions
action = false;
a_kick   = false;
a_block  = false;
a_slash1 = false;
a_slash2 = false;
a_slash3 = false;

//crouch
crouch      = false;
crouch_up   = false;
crouch_down = false;
crouch_finaly_down = false;

//speeds
slash1_speed = 3;
slash2_speed = 2;
slash3_speed = 2;
kick_speed   = 2;
block_speed  = 4;
idle_speed   = 1;
crouch_speed = 6;

walk_speed      = 5; ////5
walk_back_speed = 3; ////3
run_speed       = 11;////11
run_back_speed  = 8; //7

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn
if(image_index+image_speed &gt;= image_number){
    spawn = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key Bindings
if(!spawn){

    //Buttons
    slash1 = gamepad_button_check(1,gp_face3);
    slash2 = gamepad_button_check(1,gp_face4);
    slash3 = gamepad_button_check(1,gp_face2);
    kick   = gamepad_button_check(1,gp_face1);
    //Triggers
    block  = gamepad_button_check(1,gp_shoulderlb);
    strafe = gamepad_button_check(1,gp_shoulderrb);
    //L-Joystick
    h_speed = gamepad_axis_value(1, gp_axislh);
    v_speed = gamepad_axis_value(1, gp_axislv);
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if(!spawn){

if(!action){ // no action
    if(!crouch){ // no crouch
        image_speed = idle_speed;
        if((h_speed &gt; .25)&amp;&amp;(h_speed &lt; .999)){ ///////////////////////// left walk
            if(strafe){
                if(image_xscale &lt; 0){
                    hspeed = walk_back_speed;
                    sprite_index = spr_knight_walk_back;
                }else{
                    hspeed = walk_speed;
                    sprite_index = spr_knight_walk;
                    image_xscale = 1*sign(h_speed);
                }
            }else{
                hspeed = walk_speed;
                sprite_index = spr_knight_walk;
                image_xscale = 1*sign(h_speed);
            }
            /*
            hspeed = 5;
            sprite_index = spr_knight_walk;
            image_xscale = 1*sign(h_speed);
            */
        }else if(h_speed &gt; .999){ ////////////////////////////////// left run
            if(strafe){
                if(image_xscale &lt; 0){
                    image_speed = 0.8;
                    hspeed = run_back_speed;
                    sprite_index = spr_knight_run_back;
                }else{
                    image_speed = idle_speed;
                    hspeed = run_speed;
                    sprite_index = spr_knight_run;
                    image_xscale = 1*sign(h_speed);
                }
            }else{
                image_speed = idle_speed;
                hspeed = run_speed;
                sprite_index = spr_knight_run;
                image_xscale = 1*sign(h_speed);
            }            
            /*
            hspeed = 10;
            sprite_index = spr_knight_run;
            image_xscale = 1*sign(h_speed);
            */
        }else if((h_speed &lt; -.25)&amp;&amp;(h_speed &gt; -.999)){ ////////// right walk
            if(strafe){
                if(image_xscale &gt; 0){
                    hspeed = -walk_back_speed;
                    sprite_index = spr_knight_walk_back;
                }else{
                    hspeed = -walk_speed;
                    sprite_index = spr_knight_walk;
                    image_xscale = 1*sign(h_speed);
                }
            }else{
                hspeed = -walk_speed;
                sprite_index = spr_knight_walk;
                image_xscale = 1*sign(h_speed);
            }            
            /*
            hspeed = -5;
            sprite_index = spr_knight_walk;
            image_xscale = 1*sign(h_speed);
            */
        }else if(h_speed &lt; -.999){ ///////////////////////////// right run
            if(strafe){
                if(image_xscale &gt; 0){
                    image_speed = 0.8;
                    hspeed = -run_back_speed;
                    sprite_index = spr_knight_run_back;
                }else{
                    image_speed = idle_speed;
                    hspeed = -run_speed;
                    sprite_index = spr_knight_run;
                    image_xscale = 1*sign(h_speed); 
                }
            }else{
                image_speed = idle_speed;
                hspeed = -run_speed;
                sprite_index = spr_knight_run;
                image_xscale = 1*sign(h_speed);
            }            
            /*
            hspeed = -10;
            sprite_index = spr_knight_run;
            image_xscale = 1*sign(h_speed);
            */
        }else{ // idle
            hspeed = 0;
            sprite_index = spr_knight_idle;
        }
        if(v_speed &gt; .25){
            crouch = true;
        }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Crouch
if(!spawn){

if(crouch){
    if((!action)&amp;&amp;(!crouch_finaly_down)){
        hspeed = 0;
        image_speed = crouch_speed;
    }
    
    if((!crouch_down)&amp;&amp;(!crouch_up)){ //standing
        crouch_down = true;
        crouch_up   = false;
    }else if((crouch_down)&amp;&amp;(!crouch_up)&amp;&amp;(!crouch_finaly_down)){ // down
        if(sprite_index != spr_knight_crouch){
            sprite_index = spr_knight_crouch; 
            image_index = 0;
        }else if(image_index+image_speed &gt;= image_number){
            image_speed = 0;
            crouch_finaly_down = true; // crouched
        }
    }
    if((crouch_finaly_down)&amp;&amp;(!action)){
        if(sprite_index != spr_knight_crouch){
            image_index = 17;
            sprite_index = spr_knight_crouch; 
            image_speed = 0;
        }
        if((v_speed &lt; .25)){
                crouch_finaly_down = false;
                crouch_down = false;
                crouch_up = true;
        }
    }else if((!crouch_down)&amp;&amp;(crouch_up)){
        if(sprite_index != spr_knight_crouch_up){
            sprite_index = spr_knight_crouch_up; 
            image_index = 0;
        }else if(image_index+image_speed &gt;= image_number){
            crouch_down = false;
            crouch_up = false;
            crouch = false;
        }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Actions
if(!spawn){

if(!action){ // no action
    if(!crouch){ // no action - standing
        if(slash1){       // Slash 1
            action = true;
            if(!a_slash1){image_index = 0;}
            a_slash1 = true;
        }else if(slash2){ // Slash 2
            action = true;
            if(!a_slash2){image_index = 0;}
            a_slash2 = true;
        }else if(slash3){ // Slash 3
            action = true;
            if(!a_slash3){image_index = 0;}
            a_slash3 = true;
        }else if(kick){   // Kick
            action = true;
            if(!a_kick){image_index = 0;}
            a_kick = true;
        }else if(block){ // block
            action = true;
            if(!a_block){image_index = 0;}
            a_block = true;
        }
    }else if(crouch_finaly_down){ //no action - crouching
        if(slash1){       // Slash 1
            action = true;
            if(!a_slash1){sprite_index = spr_knight_crouch_slash; image_index = 0;}
            a_slash1 = true;
        }else if(block){ // block
            action = true;
            if(!a_block){sprite_index = spr_knight_crouch_block; image_index = 0;}
            a_block = true;
        }
    }
}else{ //yes action
    if(!crouch){ // standing
        if(a_slash1){       // Slash 1
            hspeed = 0;
            image_speed = slash1_speed;
            sprite_index = spr_knight_slash;
            if(image_index+image_speed &gt;= image_number){action = false;} 
        }else if(a_slash2){ // Slash 2
            if(h_speed &gt; .25){
                image_xscale = 1*sign(h_speed);
                hspeed = 8*sign(h_speed);
            }else if(h_speed &lt; -.25){
                image_xscale = 1*sign(h_speed);
                hspeed = 8*sign(h_speed);
            }else{
                hspeed = 8*sign(image_xscale);
            }
            
            image_speed = slash2_speed;
            sprite_index = spr_knight_slash_2;
            if(image_index+image_speed &gt;= image_number){action = false;}
        }else if(a_slash3){ // Slash 3
            hspeed = 0;
            image_speed = slash3_speed;
            sprite_index = spr_knight_slash;
            if(image_index+image_speed &gt;= image_number){action = false;}
        }else if(a_kick){   // Kick
            hspeed = 0;
            image_speed = kick_speed;
            sprite_index = spr_knight_kick;
            if(image_index+image_speed &gt;= image_number){action = false;}
        }else if(a_block){  // Block
            hspeed = 0;
            if(sprite_index != spr_knight_block_idle){
                sprite_index = spr_knight_block; 
                image_speed = block_speed;
                if(image_index+image_speed &gt;= image_number){
                    image_speed = idle_speed;
                    sprite_index = spr_knight_block_idle;
                }
            }else{
                if(!block){action = false;}
            }
        }
    }else if((crouch)&amp;&amp;(crouch_finaly_down)){ // crouching
        hspeed = 0;
        if(a_slash1){       // Slash 1
            hspeed = 0;
            image_speed = slash1_speed;
            sprite_index = spr_knight_crouch_slash;
            if(image_index+image_speed &gt;= image_number){action = false;} 
        }else if(a_block){  // Block
            hspeed = 0;
            if(sprite_index != spr_knight_crouch_block_idle){
                sprite_index = spr_knight_crouch_block; 
                image_speed = block_speed;
                if(image_index+image_speed &gt;= image_number){
                    image_speed = idle_speed;
                    sprite_index = spr_knight_crouch_block_idle;
                }
            }else{
                if(!block){action = false;}
            }
        }
    }
}

if(!action){
    a_kick   = false;
    a_block  = false;
    a_slash1 = false;
    a_slash2 = false;
    a_slash3 = false;
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
